{"version":3,"sources":["./node_modules/angular-web-storage/fesm2015/angular-web-storage.js","./src/app/b2c/requests/login-body.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sEAAgB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;AAChM;AACA,IAAI,gEAAU,EAAE,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sEAAgB,EAAE,oDAAoD,oCAAoC,EAAE,oDAAoD;AACxM;AACA,IAAI,gEAAU,EAAE,qBAAqB;AACrC;AACA;;AAEA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAQ;AACZ;;AAEA;AACA;AACA;;AAE6H;AAC7H;;;;;;;;;;;;;;;;;;AC3MO,MAAM,SAAS;IAAtB;QAGE,SAAI,GAAW,KAAK,CAAC;QACrB,YAAO,GAAQ,QAAQ,CAAC;IAC1B,CAAC;CAAA;AAEM,MAAM,cAAc;CAI1B","file":"common-es2015.js","sourcesContent":["import { defineInjectable, Injectable, NgModule } from '@angular/core';\n\n/**\n * 判断是否在浏览器中渲染Angular应用\n * `decorator` 无法直接使用Angular `PLATFORM_ID` 标识\n * 这带来的好处是当服务端自行填充 Document 时也能很好的识别\n */\nconst isBrowser = typeof document === 'object' && !!document;\nclass StorageUtil {\n    static get(storage, key) {\n        if (storage == null) {\n            return null;\n        }\n        const value = StorageUtil.parse(storage.getItem(key) || 'null') || null;\n        if (value === null)\n            return null;\n        if (typeof value === 'object' &&\n            typeof value._expired !== 'undefined' &&\n            value._expired !== 0 &&\n            +new Date() > value._expired) {\n            StorageUtil.remove(storage, key);\n            return null;\n        }\n        return value._value || null;\n    }\n    static set(storage, key, value, expiredAt = 0, expiredUnit = 't') {\n        if (storage == null) {\n            return;\n        }\n        storage.setItem(key, StorageUtil.stringify({\n            _expired: StorageUtil.getExpired(expiredAt, expiredUnit),\n            _value: value,\n        }));\n    }\n    static remove(storage, key) {\n        if (storage == null) {\n            return;\n        }\n        storage.removeItem(key);\n    }\n    static key(storage, index) {\n        return storage == null ? '' : storage.key(index);\n    }\n    static getExpired(val, unit) {\n        if (val <= 0)\n            return 0;\n        const now = +new Date();\n        switch (unit) {\n            case 's': // 秒\n                return now + 1000 * val;\n            case 'm': // 分\n                return now + 1000 * 60 * val;\n            case 'h': // 时\n                return now + 1000 * 60 * 60 * val;\n            case 'd': // 天\n                return now + 1000 * 60 * 60 * 24 * val;\n            case 'w': // 周\n                return now + 1000 * 60 * 60 * 24 * 7 * val;\n            case 'y': // 年\n                return now + 1000 * 60 * 60 * 24 * 365 * val;\n            case 't': // 自定义\n                return now + val;\n        }\n        return 0;\n    }\n    static stringify(value) {\n        return JSON.stringify(value);\n    }\n    static parse(text) {\n        try {\n            return JSON.parse(text) || null;\n        }\n        catch (e) {\n            return text;\n        }\n    }\n}\n\nconst cache = {};\nfunction WebStorage(storage, key, expiredAt = 0, expiredUnit = 'd') {\n    return (target, propertyName) => {\n        key = key || propertyName;\n        Object.defineProperty(target, propertyName, {\n            get: () => {\n                return StorageUtil.get(storage, key);\n            },\n            set: (value) => {\n                if (!cache[key]) {\n                    const storedValue = StorageUtil.get(storage, key);\n                    if (storedValue === null) {\n                        StorageUtil.set(storage, key, value, expiredAt, expiredUnit);\n                    }\n                    cache[key] = true;\n                    return;\n                }\n                StorageUtil.set(storage, key, value, expiredAt, expiredUnit);\n            },\n            enumerable: true,\n            configurable: true,\n        });\n    };\n}\n/**\n * `localStorage` Decorator\n *\n * @param [expiredAt=0] Expiration time, 0 means forever\n * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])\n */\nfunction LocalStorage(key, expiredAt = 0, expiredUnit = 't') {\n    return WebStorage(isBrowser ? localStorage : null, key, expiredAt, expiredUnit);\n}\n/**\n * `sessionStorage` Decorator\n *\n * @param [expiredAt=0] Expiration time, 0 means forever\n * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])\n */\nfunction SessionStorage(key, expiredAt = 0, expiredUnit = 't') {\n    return WebStorage(isBrowser ? sessionStorage : null, key, expiredAt, expiredUnit);\n}\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nclass StorageService {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    get(key) {\n        return StorageUtil.get(this.storage, key);\n    }\n    set(key, value, expiredAt = 0, expiredUnit = 'd') {\n        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);\n    }\n    /**\n     * 删除指定key，如：\n     * - `remove('key')` 删除 `key` 键\n     * - `remove(/BMap_\\w+/)` 批量删除所有 BMap_ 开头的键\n     * @param key 键名或正则表达式\n     */\n    remove(key) {\n        if (typeof key === 'string') {\n            StorageUtil.remove(this.storage, key);\n            return;\n        }\n        let index = 0;\n        let next = StorageUtil.key(this.storage, index);\n        const ls = [];\n        while (next) {\n            if (key.test(next))\n                ls.push(next);\n            next = StorageUtil.key(this.storage, ++index);\n        }\n        ls.forEach(v => StorageUtil.remove(this.storage, v));\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\nlet LocalStorageService = class LocalStorageService extends StorageService {\n    constructor() {\n        super(isBrowser ? localStorage : null);\n    }\n};\nLocalStorageService.ngInjectableDef = defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: \"root\" });\nLocalStorageService = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [])\n], LocalStorageService);\nlet SessionStorageService = class SessionStorageService extends StorageService {\n    constructor() {\n        super(isBrowser ? sessionStorage : null);\n    }\n};\nSessionStorageService.ngInjectableDef = defineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: \"root\" });\nSessionStorageService = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [])\n], SessionStorageService);\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet AngularWebStorageModule = class AngularWebStorageModule {\n};\nAngularWebStorageModule = __decorate$1([\n    NgModule()\n], AngularWebStorageModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularWebStorageModule, LocalStorage, LocalStorageService, SessionStorage, SessionStorageService, StorageService };\n//# sourceMappingURL=angular-web-storage.js.map\n","export class LoginBody {\n  email: string;\n  password: string;\n  type: string = 'b2c';\n  country: any = \"kuwait\";\n}\n\nexport class SuperAdminBody\n{\n  email:string;\n  password:string;\n}"],"sourceRoot":"webpack:///"}